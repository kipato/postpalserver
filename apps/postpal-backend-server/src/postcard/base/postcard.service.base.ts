/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Postcard as PrismaPostcard } from "@prisma/client";

export class PostcardServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PostcardCountArgs, "select">): Promise<number> {
    return this.prisma.postcard.count(args);
  }

  async postcards<T extends Prisma.PostcardFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostcardFindManyArgs>
  ): Promise<PrismaPostcard[]> {
    return this.prisma.postcard.findMany<Prisma.PostcardFindManyArgs>(args);
  }
  async postcard<T extends Prisma.PostcardFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostcardFindUniqueArgs>
  ): Promise<PrismaPostcard | null> {
    return this.prisma.postcard.findUnique(args);
  }
  async createPostcard<T extends Prisma.PostcardCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostcardCreateArgs>
  ): Promise<PrismaPostcard> {
    return this.prisma.postcard.create<T>(args);
  }
  async updatePostcard<T extends Prisma.PostcardUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostcardUpdateArgs>
  ): Promise<PrismaPostcard> {
    return this.prisma.postcard.update<T>(args);
  }
  async deletePostcard<T extends Prisma.PostcardDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostcardDeleteArgs>
  ): Promise<PrismaPostcard> {
    return this.prisma.postcard.delete(args);
  }
}
